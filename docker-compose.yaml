services:
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_HTTP_PORT:-8000}:80"
      - "${NGINX_HTTPS_PORT:-8443}:443"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    networks:
      - yrtuber-net
    restart: unless-stopped

  # Quasar frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_INTERNAL_PORT:-9000}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - HOST=${FRONTEND_HOST:-0.0.0.0}
      - PORT=${FRONTEND_INTERNAL_PORT:-9000}
    command: ["quasar", "dev"]
    depends_on:
      - backend
    networks:
      - yrtuber-net

  # Laravel Backend (API) - running as php-fpm
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "9000"
    volumes:
      - ./backend:/var/www/html
    environment:
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-yrtuber}
      - DB_USERNAME=${DB_USERNAME:-laravel}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - yrtuber-net

  # MySQL Database
  db:
    image: mysql:8.4
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-yrtuber}
      - MYSQL_USER=${MYSQL_USER:-laravel}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-secret}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - yrtuber-net

  # Optional: Adminer for DB access
  adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    networks:
      - yrtuber-net

volumes:
  db_data:

networks:
  yrtuber-net:
    driver: bridge
