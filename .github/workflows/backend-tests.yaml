name: Backend Tests

on:
  push:
    branches: [ main ]
    paths:
      - "backend/**"
  pull_request:
    branches: [ main ]
    paths:
      - "backend/**"

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive # needed if backend is a submodule

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      - name: Install Composer dependencies
        working-directory: backend
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Create .env for testing
        working-directory: backend
        run: |
          cp .env.example .env
          php artisan key:generate
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=testing/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run migrations
        working-directory: backend
        run: php artisan migrate --force

      - name: Run tests
        working-directory: backend
        run: php artisan test --stop-on-failure
